package cn.edu.buaa.command;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

public class AdbOperation {
	
	public void execAdbShell(String resultPath, String deviceMonkey, String devicePath, String deviceId, String packageName, int throttle){
		List<String> commands = new ArrayList<String>();
		commands.add(adbDeleteCommand(devicePath, deviceId));
		commands.add(adbPushCommand(resultPath, devicePath, deviceId));
		commands.add(adbMonkeyCommand(deviceMonkey, devicePath, packageName, throttle, deviceId));
//		System.out.println("execution");
		commands.add("adb -s " + deviceId + " shell am force-stop " + packageName);
		commands.add(adbPullCommand(resultPath, devicePath, deviceId));
		commands.add("adb -s " + deviceId + " shell rm " + devicePath + "eventScript/*.log");
		execAdbCommands(commands);
	}
	
	public void recordResult(String resultPath, String devicePath, String deviceId){
		List<String> commands = new ArrayList<String>();
		commands.add("adb -s " + deviceId + " pull " + devicePath + "execute_tmp.log " + resultPath + "execute.log");
		commands.add("adb -s " + deviceId + " pull " + devicePath + "script_tmp.log " + resultPath + "script.log");
		execAdbCommands(commands);
	}
		
	private String adbPushCommand(String resultPath, String devicePath, String deviceId){
		return "adb -s " + deviceId + " push " + resultPath + "script_tmp.log" + " " + devicePath + "script.log ";
	}
	
	private String adbDeleteCommand(String devicePath, String deviceId){
		return "adb -s " + deviceId + " shell rm " + devicePath + "*.log";
	}
	
	private String adbMonkeyCommand(String deviceMonkey, String devicePath, String packageName, int throttle, String deviceId){
		return "adb -s " + deviceId + " shell " + deviceMonkey + "monkey -p " + packageName + " -f " + devicePath + "script.log "
				+ "  --throttle " + throttle + " 1";
	}
	
	private String adbPullCommand(String resultPath, String devicePath, String deviceId){
		return "adb -s " + deviceId + " pull " + devicePath + "execute.log" + " " + resultPath + "execute_tmp.log ";
	}

	private static void execAdbCommands(List<String> commands){
		try {
			for(String cmd: commands){
//				System.out.println("------------------------------------------------");
//				System.out.println("## Prepare to execute command \"" + cmd + "\"!");
				Process pro = Runtime.getRuntime().exec(cmd);
		        InputStream in = pro.getInputStream();  
		        BufferedReader read = new BufferedReader(new InputStreamReader(in)); 
		        while(read.readLine() != null){  
//		            System.out.println(line);  
		        }
		        pro.waitFor();   	        
		        read.close();
//				System.out.println("## Execute successfully!");
//				System.out.println("------------------------------------------------");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
//	
//	public static void main(String[] args){
//		List<String> commands = new ArrayList<String>();
//		commands.add("adb push /home/test/Android/experiments/origin/script.log /storage/sdcard/");
//		commands.add("adb shell monkey -p com.sirma.mobile.bible.android -f /storage/sdcard/script.log "
//				+ " --throttle 5000 --kill-process-after-error 1");
//		execAdbCommands(commands);
//	}
}
